import re
from typing import Callable

# Generator function to extract numbers from text
def generator_numbers(text: str):
    # Regular expression pattern to match numbers (integers and floats)
    # (?:^|\s) - non-capturing group for start of string or whitespace
    # (\d+(?:\.\d+)?) - capturing group for number (integer or decimal)
    # (?=\s|$) - positive lookahead: whitespace or end of string
    pattern = r"(?:^|\s)(\d+(?:\.\d+)?)(?=\s|$)" 

    for match in re.finditer(pattern, text):
        yield float(match.group(1)) # Yield the matched number as a float
        
# Function to sum numbers generated by a given function
def sum_profit(text: str, func: Callable) -> float:
    total = 0
    for number in func(text):
        total += number
    return format(total, ".2f")

# Example usage:

text="The employee's total income consists of several parts: 1000.01 as the main income, supplemented by additional income of 27.45 and 324.00 dollars."
total_income = sum_profit(text, generator_numbers)
print(f"Total income: {total_income}") # Output: Total income: 1351.46