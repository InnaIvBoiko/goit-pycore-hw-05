"""Module for extracting and summing numbers from text using generators."""
import re
from typing import Callable


def generator_numbers(text: str):
    """Generator function to extract numbers from text.
    
    Finds all numbers (integers and floats) in the given text that are
    separated by whitespace or at the beginning/end of the string.
    
    Args:
        text (str): Input text to search for numbers
        
    Yields:
        float: Each number found in the text as a float
    """
    pattern = r"(?:^|\s)(\d+(?:\.\d+)?)(?=\s|$)" 

    for match in re.finditer(pattern, text):
        yield float(match.group(1))
        

def sum_profit(text: str, func: Callable) -> float:
    """Sum numbers generated by a given function.
    
    Args:
        text (str): Input text to process
        func (Callable): Function that generates numbers from text
        
    Returns:
        float: Sum of all numbers formatted to 2 decimal places
    """
    total = 0
    for number in func(text):
        total += number
    return format(total, ".2f")

# Example usage:

text="The employee's total income consists of several parts: 1000.01 as the main income, supplemented by additional income of 27.45 and 324.00 dollars."
total_income = sum_profit(text, generator_numbers)
print(f"Total income: {total_income}")